package propertytycoongame;

import java.util.ArrayList;
import javafx.application.Platform;
import javafx.embed.swing.JFXPanel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import propertytycoongame.Player.Token;

/**
 * GameGUI
 *
 * GUI class of the whole project
 *
 * @author Hayden
 */
public class GameGUI extends javax.swing.JFrame {

    CentralControl game;
    static GameGUI gui;
    Token st;
    Boolean fullGame;
    Boolean running = false;

    /**
     * Creates new form GameGUI
     */
    public GameGUI() {
        initComponents();
        createTokenList();
    }

    /**
     * This method is called from within the constructor to initialise the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statsFrame = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        JScrollPane = new javax.swing.JScrollPane();
        tblStats = new javax.swing.JTable();
        propsFrame = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblOwnProp = new javax.swing.JTable();
        btnMortgage = new javax.swing.JButton();
        btnUpgrade = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        playerSetup = new javax.swing.JPanel();
        btnStartGame = new javax.swing.JButton();
        txtFplayername = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tokenList = new javax.swing.JList<>();
        nPlayers = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        playerList = new javax.swing.JList<>();
        btnAddPlayer = new javax.swing.JButton();
        startScreen = new javax.swing.JPanel();
        startFullGame = new javax.swing.JButton();
        startAbridgedGame = new javax.swing.JButton();
        txtGameLength = new javax.swing.JTextField();
        gameScreen = new javax.swing.JPanel();
        txtCurrPos = new javax.swing.JLabel();
        txtRollValue = new javax.swing.JLabel();
        txtCurrPlayer = new javax.swing.JLabel();
        txtPlrBalance = new javax.swing.JLabel();
        txtAvaliable = new javax.swing.JLabel();
        txtBankBalance = new javax.swing.JLabel();
        txtPrpCost = new javax.swing.JLabel();
        btnNextPlayer = new javax.swing.JButton();
        btnRollDice = new javax.swing.JButton();
        btnBuyProp = new javax.swing.JButton();
        btnViewProp = new javax.swing.JButton();
        txtDouble = new javax.swing.JLabel();
        txtGroup = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        pauseMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        loadMenuItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();
        statsMenu = new javax.swing.JMenu();
        statsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        statsFrame.setTitle("Game Statistics");
        statsFrame.setMinimumSize(new java.awt.Dimension(476, 316));

        tblStats.setAutoCreateRowSorter(true);
        JScrollPane.setViewportView(tblStats);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 330, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 318, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(JScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout statsFrameLayout = new javax.swing.GroupLayout(statsFrame.getContentPane());
        statsFrame.getContentPane().setLayout(statsFrameLayout);
        statsFrameLayout.setHorizontalGroup(
            statsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsFrameLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        statsFrameLayout.setVerticalGroup(
            statsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statsFrameLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        propsFrame.setSize(new java.awt.Dimension(399, 318));

        jScrollPane3.setViewportView(tblOwnProp);

        btnMortgage.setText("Mortgage");
        btnMortgage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMortgageActionPerformed(evt);
            }
        });

        btnUpgrade.setText("Upgrade");
        btnUpgrade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpgradeActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUpgrade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMortgage)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMortgage)
                    .addComponent(btnUpgrade)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout propsFrameLayout = new javax.swing.GroupLayout(propsFrame.getContentPane());
        propsFrame.getContentPane().setLayout(propsFrameLayout);
        propsFrameLayout.setHorizontalGroup(
            propsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propsFrameLayout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        propsFrameLayout.setVerticalGroup(
            propsFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(propsFrameLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Property Tycoon Game");

        btnStartGame.setText("Start Game");
        btnStartGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartGameActionPerformed(evt);
            }
        });

        tokenList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tokenList.setVerifyInputWhenFocusTarget(false);
        tokenList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                tokenListValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tokenList);

        nPlayers.setText("Number of Players: ");

        jLabel1.setText("Name:");

        jLabel2.setText("Token:");

        jLabel3.setText("Players in current game:");

        playerList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(playerList);

        btnAddPlayer.setText("Add Player");
        btnAddPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddPlayerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout playerSetupLayout = new javax.swing.GroupLayout(playerSetup);
        playerSetup.setLayout(playerSetupLayout);
        playerSetupLayout.setHorizontalGroup(
            playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerSetupLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 32, Short.MAX_VALUE)
                .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(playerSetupLayout.createSequentialGroup()
                        .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(txtFplayername, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(108, 108, 108))
                    .addGroup(playerSetupLayout.createSequentialGroup()
                        .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nPlayers, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(playerSetupLayout.createSequentialGroup()
                                .addComponent(btnAddPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                    .addComponent(btnStartGame, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE))))
                        .addContainerGap(135, Short.MAX_VALUE))))
        );
        playerSetupLayout.setVerticalGroup(
            playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(playerSetupLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFplayername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(playerSetupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddPlayer)
                    .addComponent(btnStartGame))
                .addGap(14, 14, 14)
                .addComponent(nPlayers)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        startFullGame.setText("Full Game");
        startFullGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startFullGameActionPerformed(evt);
            }
        });

        startAbridgedGame.setText("Abridged");
        startAbridgedGame.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startAbridgedGameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout startScreenLayout = new javax.swing.GroupLayout(startScreen);
        startScreen.setLayout(startScreenLayout);
        startScreenLayout.setHorizontalGroup(
            startScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startScreenLayout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addGroup(startScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(startScreenLayout.createSequentialGroup()
                        .addComponent(startAbridgedGame)
                        .addGap(18, 18, 18)
                        .addComponent(txtGameLength, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(startFullGame))
                .addContainerGap(293, Short.MAX_VALUE))
        );
        startScreenLayout.setVerticalGroup(
            startScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(startScreenLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(startFullGame)
                .addGap(18, 18, 18)
                .addGroup(startScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startAbridgedGame)
                    .addComponent(txtGameLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(121, Short.MAX_VALUE))
        );

        txtCurrPos.setText("Current Position:");

        txtRollValue.setText("Roll Value:");

        txtCurrPlayer.setText("Player:");

        txtPlrBalance.setText("Balance:");

        txtAvaliable.setText("Avaliable: ");

        txtBankBalance.setText("Bank Balance:");

        txtPrpCost.setText("Cost:");

        btnNextPlayer.setText("Next Player");
        btnNextPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextPlayerActionPerformed(evt);
            }
        });

        btnRollDice.setText("Roll Dice");
        btnRollDice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRollDiceActionPerformed(evt);
            }
        });

        btnBuyProp.setText("Buy Property");
        btnBuyProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuyPropActionPerformed(evt);
            }
        });

        btnViewProp.setText("View Properties");
        btnViewProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPropActionPerformed(evt);
            }
        });

        txtGroup.setText("Group: ");

        javax.swing.GroupLayout gameScreenLayout = new javax.swing.GroupLayout(gameScreen);
        gameScreen.setLayout(gameScreenLayout);
        gameScreenLayout.setHorizontalGroup(
            gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameScreenLayout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(gameScreenLayout.createSequentialGroup()
                            .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(gameScreenLayout.createSequentialGroup()
                                    .addComponent(txtCurrPos, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtGroup, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(gameScreenLayout.createSequentialGroup()
                                    .addComponent(btnRollDice)
                                    .addGap(29, 29, 29)
                                    .addComponent(txtDouble, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtRollValue, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(gameScreenLayout.createSequentialGroup()
                                            .addGap(183, 183, 183)
                                            .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(btnViewProp)
                                                .addComponent(txtBankBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(txtPlrBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addContainerGap(51, Short.MAX_VALUE))
                        .addGroup(gameScreenLayout.createSequentialGroup()
                            .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(gameScreenLayout.createSequentialGroup()
                                    .addComponent(txtAvaliable, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtPrpCost, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnBuyProp))
                                .addComponent(txtCurrPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(0, 0, Short.MAX_VALUE)))
                    .addComponent(btnNextPlayer)))
        );
        gameScreenLayout.setVerticalGroup(
            gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gameScreenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNextPlayer)
                .addGap(18, 18, 18)
                .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCurrPlayer, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPlrBalance)
                    .addComponent(txtBankBalance))
                .addGap(18, 18, 18)
                .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRollDice)
                    .addComponent(txtRollValue, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDouble, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE))
                .addGap(35, 35, 35)
                .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCurrPos)
                    .addComponent(txtGroup))
                .addGap(18, 18, 18)
                .addGroup(gameScreenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAvaliable)
                    .addComponent(txtPrpCost)
                    .addComponent(btnBuyProp)
                    .addComponent(btnViewProp))
                .addGap(31, 31, 31))
        );

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        pauseMenuItem.setText("Pause");
        fileMenu.add(pauseMenuItem);

        saveMenuItem.setText("Save");
        fileMenu.add(saveMenuItem);

        loadMenuItem.setText("Load");
        fileMenu.add(loadMenuItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        statsMenu.setText("Stats");

        statsMenuItem.setText("View Game Statistics");
        statsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statsMenuItemActionPerformed(evt);
            }
        });
        statsMenu.add(statsMenuItem);

        menuBar.add(statsMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentsMenuItem.setMnemonic('c');
        contentsMenuItem.setText("Contents");
        helpMenu.add(contentsMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(gameScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(playerSetup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(startScreen, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(gameScreen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(playerSetup, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void startFullGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startFullGameActionPerformed
        game = new CentralControl(0);
        fullGame = true;
        gui.startScreen.setVisible(false);
        gui.playerSetup.setVisible(true);
    }//GEN-LAST:event_startFullGameActionPerformed

    private void btnStartGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartGameActionPerformed
        Thread updGUI = new Thread(new Runnable() {
            @Override
            public void run() {
                new JFXPanel();
                Runnable upd = new Runnable() {
                    @Override
                    public void run() {
                        updateGUI();
                        //System.out.println("Updated GUI");
                    }
                };
                while (true) {
                    try {
                        Thread.sleep(500);
                    } catch (InterruptedException ex) {
                    }

                    Platform.runLater(upd);
                }
            }

        });
        updGUI.setDaemon(true);
        updGUI.start();
        try {
            game.initPlayers();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(playerSetup, ex.getMessage());
        }
        gui.playerSetup.setVisible(false);
        gui.gameScreen.setVisible(true);

    }//GEN-LAST:event_btnStartGameActionPerformed

    private void tokenListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_tokenListValueChanged
        st = tokenList.getSelectedValue();
    }//GEN-LAST:event_tokenListValueChanged

    private void startAbridgedGameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startAbridgedGameActionPerformed
        game = new CentralControl(90);
        gui.startScreen.setVisible(false);
        gui.playerSetup.setVisible(true);

        //running = true;
        //tmr();
    }//GEN-LAST:event_startAbridgedGameActionPerformed

    private void btnAddPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddPlayerActionPerformed
        try {
            Player p = new Player(txtFplayername.getText(), st);
            game.addPlayer(p);
            gui.nPlayers.setText("Number of Players: " + game.getPlayers().size());
            gui.tokenList.clearSelection();

            createPlayerList();
        } catch (DuplicateException ex) {
            JOptionPane.showMessageDialog(playerSetup, ex.getMessage());
        } catch (Exception ex){
            JOptionPane.showMessageDialog(playerSetup, ex.getMessage());
        }
    }//GEN-LAST:event_btnAddPlayerActionPerformed

    private void btnNextPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextPlayerActionPerformed
        game.nextPlayer();
        CentralControl.dices.newPlayer();
    }//GEN-LAST:event_btnNextPlayerActionPerformed

    private void btnRollDiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRollDiceActionPerformed
        if (CentralControl.dices.rollAgain) {
            CentralControl.dices.rollDice();
            game.getCurrentPlayer().setLocation(game.getCurrentPlayer().getLocation() + CentralControl.dices.getTotalVal());
            if (CentralControl.dices.goJail) {
                game.getCurrentPlayer().setLocation(11);
            }
        }
        //game.getCurrentPlayer().rollDices(); //Using roll dice method in player class
        if (CentralControl.dices.doub) {
            txtDouble.setText("Double!");
        }
    }//GEN-LAST:event_btnRollDiceActionPerformed

    private void btnBuyPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuyPropActionPerformed
        try {
            Player p = game.getCurrentPlayer();
            CentralControl.bank.buyProperty(p, (Property) CentralControl.board.getCell(p.getLocation()));
            createOwnedProp();
        } catch (ClassCastException ex) {
            JOptionPane.showMessageDialog(gameScreen, "You cannot buy this property");
        } catch (PropertyException ex) {
            JOptionPane.showMessageDialog(gameScreen, ex.getMessage());
        }

    }//GEN-LAST:event_btnBuyPropActionPerformed

    private void btnViewPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPropActionPerformed
        createOwnedProp();
        propsFrame.setVisible(true);
    }//GEN-LAST:event_btnViewPropActionPerformed

    private void statsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsMenuItemActionPerformed
        createStatsTable();
        statsFrame.setVisible(true);
    }//GEN-LAST:event_statsMenuItemActionPerformed

    private void btnUpgradeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpgradeActionPerformed
        Player p = game.getCurrentPlayer();
        try {
            CentralControl.bank.buildHouse(p, p.getPropertiesList().get(tblOwnProp.getSelectedRow()));
        } catch (PropertyException ex) {
            JOptionPane.showMessageDialog(gameScreen, ex.getMessage());
        } catch (LackMoneyException ex) {
            JOptionPane.showMessageDialog(gameScreen, ex.getMessage());
        }
    }//GEN-LAST:event_btnUpgradeActionPerformed

    private void btnMortgageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMortgageActionPerformed
        Player p = game.getCurrentPlayer();

        //(game.getCurrentPlayer().propertiesList().get(tblOwnProp.))
    }//GEN-LAST:event_btnMortgageActionPerformed

    private void updateGUI() {
        try {
            Player p = game.getCurrentPlayer();
            txtPlrBalance.setText("Balance: " + p.getMoney());
            txtRollValue.setText("Roll Value: " + CentralControl.dices.getTotalVal());
            txtCurrPlayer.setText("Player: " + p.getName());
            txtCurrPos.setText("Current Position: " + ((Property) CentralControl.board.getCell(p.getLocation())).getName());
            setTitle("Property Tycoon Game - " + game.getRemainingTime().toString());
            txtAvaliable.setText("Avaliable: " + Boolean.toString(((Property) CentralControl.board.getCell(p.getLocation())).isAvailable()));
            txtBankBalance.setText("Bank Balance: " + Integer.toString(CentralControl.bank.getBalance()));
            txtPrpCost.setText("Cost: " + Integer.toString(((Property) CentralControl.board.getCell(p.getLocation())).getCost()));
            txtGroup.setText("Group: " + ((Property) CentralControl.board.getCell(p.getLocation())).getGroup());
        } catch (NullPointerException ex) {
            System.out.println("GUI not updated");
        } catch (ClassCastException ex) {

        }
    }

    public void createOwnedProp() {
        Player p = game.getCurrentPlayer();
        String[] colName = {"Name", "Group", "No Houses", "Rent"};
        Object[] rowData;
        ArrayList<Object[]> data = new ArrayList<>();
        for (Property prop : p.getPropertiesList()) {
            rowData = new Object[]{prop.getName(), prop.getGroup(), prop.getNumOfHouse(), prop.getRent()};
            data.add(rowData);
        }
        DefaultTableModel tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableModel.setRowCount(0);
        for (String col : colName) {
            tableModel.addColumn(col);
        }
        for (Object[] d : data) {
            tableModel.addRow(d);
        }
        tblOwnProp.setModel(tableModel);
    }

    private void createTokenList() {
        tokenList.setModel(new javax.swing.AbstractListModel<Token>() {
            Token[] ts = Token.values();

            @Override
            public int getSize() {
                return ts.length;
            }

            @Override
            public Token getElementAt(int index) {
                return ts[index];
            }

            public void removeElement(Token t) {
                for (int i = 0; i < ts.length; i++) {
                    if (ts[i].equals(t)) {
                        ts[i] = null;
                    }
                }
            }

        });

    }

    private void createPlayerList() {
        ArrayList<String> pn = new ArrayList<>();
        for (Player p : game.getPlayers()) {
            pn.add(p.getName());
        }

        playerList.setModel(new javax.swing.AbstractListModel<String>() {

            @Override
            public int getSize() {
                return pn.size();
            }

            @Override
            public String getElementAt(int index) {
                return pn.get(index);
            }

        });

    }

    private void createStatsTable() {
        String[] colName = {"Player", "Cash", "Properties", "Location"};
        Object[][] data = new Object[6][4];
        for (int i = 0; i < game.getPlayers().size(); i++) {
            Player p = game.getPlayers().get(i);
            data[i][0] = p.getName();
            data[i][1] = p.getMoney();
            data[i][2] = p.getPropertiesList().size();
            data[i][3] = p.getLocation();
        }

        DefaultTableModel tableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        tableModel.setRowCount(0);

        for (String col : colName) {
            tableModel.addColumn(col);
        }
        for (Object[] d : data) {
            tableModel.addRow(d);
        }
        tblStats.setModel(tableModel);

//        return data;
    }

    /**
     * @param args the command line arguments
     */
    public static void Start() {

        /* Set the Mac OS X look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Mac OS X".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                gui = new GameGUI();
                gui.setVisible(true);
                gui.gameScreen.setVisible(false);
                gui.playerSetup.setVisible(false);
                gui.statsFrame.setVisible(false);
                gui.propsFrame.setVisible(false);
                gui.startScreen.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane JScrollPane;
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton btnAddPlayer;
    private javax.swing.JButton btnBuyProp;
    private javax.swing.JButton btnMortgage;
    private javax.swing.JButton btnNextPlayer;
    private javax.swing.JButton btnRollDice;
    private javax.swing.JButton btnStartGame;
    private javax.swing.JButton btnUpgrade;
    private javax.swing.JButton btnViewProp;
    private javax.swing.JMenuItem contentsMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel gameScreen;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JMenuItem loadMenuItem;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JLabel nPlayers;
    private javax.swing.JMenuItem pauseMenuItem;
    private javax.swing.JList<String> playerList;
    private javax.swing.JPanel playerSetup;
    private javax.swing.JFrame propsFrame;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JButton startAbridgedGame;
    private javax.swing.JButton startFullGame;
    private javax.swing.JPanel startScreen;
    private javax.swing.JFrame statsFrame;
    private javax.swing.JMenu statsMenu;
    private javax.swing.JMenuItem statsMenuItem;
    private javax.swing.JTable tblOwnProp;
    private javax.swing.JTable tblStats;
    private javax.swing.JList<Token> tokenList;
    private javax.swing.JLabel txtAvaliable;
    private javax.swing.JLabel txtBankBalance;
    private javax.swing.JLabel txtCurrPlayer;
    private javax.swing.JLabel txtCurrPos;
    private javax.swing.JLabel txtDouble;
    private javax.swing.JTextField txtFplayername;
    private javax.swing.JTextField txtGameLength;
    private javax.swing.JLabel txtGroup;
    private javax.swing.JLabel txtPlrBalance;
    private javax.swing.JLabel txtPrpCost;
    private javax.swing.JLabel txtRollValue;
    // End of variables declaration//GEN-END:variables

}
